1.
프록시에 대해서
1)
em.find 와 em.getReferences()
- em.find() : 데이터 베이스를 통해 실제 엔티티 객체를 조회한다.
- em.getReferences() : 데이터베이스 조회를 미루는 가짜(프록시) 엔티티 객체를 조회한다.
                        즉, db에 쿼리가 나가지 않는데도 조회를 한다.
2)
프록시는 엔티티객체를 상속한다.
프록시의 속성에는 target이라는 것이 있다.
이 target에는 상속을 한 엔티티객체의 정보를 가지고 있다.
프록시와 영속성과 db의 관계는 다음과 같다.
- 1. getUserName으로 userName을 쓰려고 한 시점에 영속성 컨텍스트에 요청을 한다.
     처음에 한번 초기화가 된다.
     이때 target의 값이 없으면 jpa는 영속성 컨텍스트에서 가져온다.
     영속성 컨텍스트에서 없다면 db에서 조회를 한다.
     조회된 결과를 토대로 entity를 만들고
     영속성컨텍스는 만들어진 entity 정보를 프록시에게 target의 값으로 준다.
     프록시 객체의 메소드 ( ex) getName() )은 상속한 클래스의 메소드를 사용하는 것이다.
3)
특징
- 1. 프록시 객체는 처음 사용할 때 한번 초기화 된다. 그 이후에 하지 않는다.
- 2. 프록시 객체를 초기화 할떄, 프록시 객체가 실제 엔티티로 바뀌는 게 아니다.
    접근 가능을 하게 만들어주는 것 뿐이다.
- 3. 따라서 타입 체크시에는 instance of 를 사용해야 된다. == 으로는 오류의 위험이 있다.
     타입이 프록시로 넘어오는건지, 엔티티로 넘어오는건지에 비교의 결과가 true가 될지 false가 될지 모른다.
- 4. 영속성 컨텍스트에 이미 엔티티가 있으면 getReference를 사용해도 엔티티를 가지고 온다.
     이미 1차 캐시에 있는 엔티티를 굳이 프록시를 사용해서 가져올 필요가 없어서다.
     그리고 jpa의 기본적인 원칙은 프록시 == entity는 같아야된다.
- 5. 준영속 상태일때 프록시 초기화를 하면 예외가 발생한다. LazyInitailiztionExceiption
4)
프록시에 대한 메소드
- 1. 초기화 여부 확인


